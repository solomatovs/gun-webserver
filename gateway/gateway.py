import secrets

from fastapi import FastAPI, WebSocket
from pydantic import BaseModel
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI()

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (—Ç–æ–ª—å–∫–æ —Ç–≤–æ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-–¥–æ–º–µ–Ω)
origins = [
    "https://gun.muduck.com",  # —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
]

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI()

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (—Ç–æ–ª—å–∫–æ —Ç–≤–æ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-–¥–æ–º–µ–Ω)
origins = [
    "https://gun.muduck.com",  # —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,          # –∫–∞–∫–∏–µ –¥–æ–º–µ–Ω—ã –º–æ–≥—É—Ç —Ö–æ–¥–∏—Ç—å –∫ API
    allow_credentials=True,
    allow_methods=["*"],            # –∫–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã (GET, POST –∏ —Ç.–¥.)
    allow_headers=["*"],            # –∫–∞–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)
class SessionRequest(BaseModel):
    user_id: str

@app.post("/create_session")
async def create_session(req: SessionRequest):
    # ‚ö° —Ç—É—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
    host = "gun-work-1.muduck.com"   # –∞–¥—Ä–µ—Å –º–∞—à–∏–Ω—ã/–≤–æ—Ä–∫–µ—Ä–∞
    port = 443                # –ø–æ—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω —Å–ª—É—à–∞–µ—Ç
    token = secrets.token_hex(16)  # –ø—Ä–æ—Å—Ç–æ–π —Ç–æ–∫–µ–Ω

    return {
        "host": host,
        "port": port,
        "token": token,
        "user_id": req.user_id
    }

# üîπ —Å–∞–º WebSocket endpoint
@app.websocket("/ws")
async def websocket_endpoint(ws: WebSocket):
    await ws.accept()
    try:
        while True:
            msg = await ws.receive_text()
            print(f"Got message: {msg}")
            await ws.send_text(f"Echo: {msg}")
    except Exception as e:
        print(f"WS closed: {e}")
    finally:
        await ws.close()